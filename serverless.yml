service: dala-wallet-api
package: 
  exclude:
    - env/**
    - microraiden/**
    - dala_proxy.db*
    - private-key
    - secret.js
    - truffle.js


provider:
  name: aws
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${opt:profile}
  region: eu-west-1
  runtime: nodejs6.10
  environment:
    CLIENT_ID: ${self:resources.Outputs.CognitoUserPoolDalaWalletUserPoolClientId.Value}
    USER_POOL_ID: ${self:resources.Outputs.CognitoUserPoolDalaWalletUserPoolId.Value}
    DEFAULT_GAS: ${self:custom.profiles.${self:provider.stage}.DEFAULT_GAS}
  environmentSecrets:
    PRIVATE_KEY: '/${self:service}/${self:provider.stage}/PRIVATE_KEY'
    RPC_SERVER: '/${self:service}/${self:provider.stage}/RPC_SERVER'
    FROM_ADDRESS: '/${self:service}/${self:provider.stage}/FROM_ADDRESS'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - ${self:resources.Outputs.DalaWalletEventsDynamoDbTableArn.Value}
    - Effect: Allow
      Action:
        - cognito-idp:AdminCreateUser
        - cognito-idp:AdminInitiateAuth
        - cognito-idp:AdminRespondToAuthChallenge
        - cognito-idp:AdminGetUser
        - cognito-idp:AdminResetUserPassword
      Resource:
        - ${self:resources.Outputs.CognitoUserPoolDalaWalletUserPoolArn.Value}
  apiKeys:
    - ${self:service}-${self:provider.stage}

functions:
  #dynamodb stream listeners
  onDalaTokenEvent:
    handler: src/events/listeners.onDalaTokenEvent
    package:
      include: 
        - src/events/**
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - DalaTokenEventsDynamoDbTable
              - StreamArn
  #state machine steps
  ethSweepWallet:
    handler: src/blockchain/token-sweeper.sweep
    timeout: 30
    package:
      include:
        - src/blockchain/token-sweeper.js
        - lib/DalaWallet.json
  ethCreateWallet:
    handler: src/blockchain/dala-wallet.create
    timeout: 30
    package:
      include:
        - src/blockchain/dala-wallet.js
        - src/blockchain/utils.js
        - lib/DalaWallet.json
  #api endpoints 
  authenticate:
    handler: src/users/handler.authenticate
    package: 
      include:
        - src/users/**
    events:
      - http:
          path: v1/authentications
          method: post
          cors: true
          private: true
  registerUser:
    handler: src/users/handler.register
    package:
      include:
        - src/users/**
    events:
      - http:
          path: v1/users
          method: post
          cors: true
          private: true
  createWallet:
    handler: src/wallets/handler.create
    package:
      include:
        - src/wallets/handler.js
    events:
      - http:
          path: v1/wallets
          method: post
          cors: true
          private: true

plugins:
  - serverless-secrets
  - serverless-prune-plugin
  - serverless-plugin-cfauthorizer

custom:
  prune:
    automatic: true
    number: 5
  cfAuthorizers:
    DalaWalletAuthorizer:
      Type: COGNITO_USER_POOLS
      Name: DalaUsers
      IdentitySource: "method.request.header.Authorization"
      ProviderARNs:
        - ${self:resources.Outputs.CognitoUserPoolDalaWalletUserPoolArn.Value}
  defaultStage: dev
  profiles:
    dev:
      DEFAULT_GAS: 4500000
      DESTINATION_ADDRESS: "0xDD86986bA67b4A1A8E7BE4833Dde2c09243333D7"
      TOKEN_ADDRESS: "0x5d689a3de1a648f85d23231a2d95fa89ce3d41fc"
      MIN_BALANCE: 50000000000000000000
  serverlessSecrets:
    providerOptions:
      region: ${self:provider.region}
    keys:
      default: ${self:resources.Outputs.DalaWalletKeyAliasName.Value}

resources:
  Outputs:
    DalaWalletEventsDynamoDbTableArn:
      Value:
        Fn::GetAtt:
          - DalaWalletEventsDynamoDbTable
          - Arn
    DalaWalletKeyAliasName:
      Value:
        Ref: DalaWalletKeyAlias
    DalaWalletSMSRoleArn:
      Value:
        Fn::GetAtt:
          - DalaWalletSMSRole
          - Arn
    CognitoUserPoolDalaWalletUserPoolId:
      Value:
        Ref: CognitoUserPoolDalaWalletUserPool
    CognitoUserPoolDalaWalletUserPoolProviderName:
      Value:
        Fn::GetAtt:
          - CognitoUserPoolDalaWalletUserPool
          - ProviderName
    CognitoUserPoolDalaWalletUserPoolProviderUrl:
      Value:
        Fn::GetAtt:
          - CognitoUserPoolDalaWalletUserPool
          - ProviderURL
    CognitoUserPoolDalaWalletUserPoolArn:
      Value:
        Fn::GetAtt:
          - CognitoUserPoolDalaWalletUserPool
          - Arn
    CognitoUserPoolDalaWalletUserPoolClientId:
      Value: 
        Ref: CognitoUserPoolDalaWalletUserPoolClient
  Resources:
    DalaTokenEventsDynamoDbTable: ${file(./CloudFormation/DynamoDB/DalaTokenEventsDynamoDbTable.yml):Table}
    DalaWalletEventsDynamoDbTable: ${file(./CloudFormation/DynamoDB/DalaWalletEventsDynamoDbTable.yml):Table}
    DalaWalletKeyKMS: ${file(./CloudFormation/KMS/DalaWalletKeyKMS.yml):Key}
    DalaWalletKeyAlias: ${file(./CloudFormation/KMS/DalaWalletKeyAlias.yml):Alias}
    DalaWalletSMSRole: ${file(./CloudFormation/IAM/DalaWalletSMSRole.yml):Role} 
    CognitoUserPoolDalaWalletUserPool: ${file(./CloudFormation/Cognito/CognitoUserPoolDalaWalletUserPool.yml):UserPool}
    CognitoUserPoolDalaWalletUserPoolClient: ${file(./CloudFormation/Cognito/CognitoUserPoolDalaWalletUserPoolClient.yml):UserPoolClient}
      